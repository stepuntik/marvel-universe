{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","process","setProcess","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getCharacterByName","name","getAllComics","_transformComics","getComic","char","description","slice","fullDescription","thumbnail","path","extension","comics","items","stories","title","writers","creators","length","creator","join","originalSource","urls","language","textObjects","price","prices","AppBanner","className","avengers","avengersLogo","setContent","Component","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","setnewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","pageStart","loadMore","hasMore","initialLoad","loader","useWindow","arr","item","i","to","renderItems","ComicsPage","Helmet","content"],"mappings":"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","file":"static/js/8.6712dfd6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: 'block',\r\n        width: '250px',\r\n        height: '250px',\r\n        objectFit: 'contain',\r\n        margin: '0 auto',\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=7baff9ba7eb10679bf4c82b8346b3b08';\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : 'There is no description for this character',\r\n      fullDescription: char.description\r\n        ? `${char.description}`\r\n        : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      comics: char.comics.items,\r\n      stories: char.stories.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      writers:\r\n        comics.creators.items.length > 0\r\n          ? comics.creators.items.map((creator) => creator.name).join(', ')\r\n          : 'Unknown',\r\n      description: comics.description || 'There is no description',\r\n      originalSource: comics.urls[0].url\r\n        ? `${comics.urls[0].url}`\r\n        : 'No information about the original source',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || 'en-us',\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : 'Price is not available',\r\n    };\r\n  };\r\n\r\n  return {\r\n    clearError,\r\n    process,\r\n    setProcess,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharacterByName,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState('waiting');\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = 'GET',\r\n      body = null,\r\n      headers = { 'Content-Type': 'application/json' }\r\n    ) => {\r\n      setProcess('loading');\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        return data;\r\n      } catch (error) {\r\n        setProcess('error');\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess('loading');\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case 'waiting':\n      return <Spinner />;\n    case 'loading':\n      return newItemLoading ? <Component /> : null;\n    case 'confirmed':\n      return <Component />;\n    case 'error':\n      return <ErrorMessage />;\n    default:\n      throw new Error('Unexpected process state');\n  }\n};\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { getAllComics, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []); //eslint-disable-line react-hooks/exhaustive-deps\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n      .then(() => setProcess('confirmed'));\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  const renderItems = (arr) => {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  };\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={() => onRequest(offset)}\n      hasMore={!comicsEnded}\n      initialLoad={false}\n      loader={<Spinner key={0} />}\n      useWindow={true}\n    >\n      <ul className=\"comics__list\">\n        {setContent(process, () => renderItems(comicsList), newItemLoading)}\n      </ul>\n    </InfiniteScroll>\n  );\n};\n\nexport default ComicsList;\n","import { Helmet } from 'react-helmet';\r\n\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Page with list of our comics\" />\r\n        <title>Comics Page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}